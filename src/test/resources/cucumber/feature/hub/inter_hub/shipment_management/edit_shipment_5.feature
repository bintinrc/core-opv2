@OperatorV2 @MiddleMile @Hub @InterHub @ShipmentManagement @EditShipment5
Feature: Shipment Management - Edit Shipment 5

  @LaunchBrowser @ShouldAlwaysRun
  Scenario: Login to Operator Portal V2
    Given Operator login with username = "{operator-portal-uid}" and password = "{operator-portal-pwd}"

  @DeleteHubsViaDb @DeleteCreatedShipments @DeleteMiddleMileDriver @ForceCompleteCreatedMovementTrips
  Scenario: Edit Shipment with Invalid Status - Completed (uid:afa91c9d-a140-4635-9e05-a858f5113558)
    When Operator go to menu Inter-Hub -> Shipment Management
    When API Operator creates 2 new Hub using data below:
      | name         | GENERATED |
      | displayName  | GENERATED |
      | facilityType | CROSSDOCK |
      | city         | GENERATED |
      | country      | GENERATED |
      | latitude     | GENERATED |
      | longitude    | GENERATED |
    When API MM - Operator creates new Middle Mile Driver with data below:
      | requestBody | {"username":"GENERATED","password":"{default-password}","first_name":"GENERATED","last_name":"GENERATED","license_number":"GENERATED","license_type":"Class 3A","driver_type":"Middle-Mile-Driver","license_expiry_date":"{date: 3 days next, yyyy-MM-dd}","contact":{"active":true,"details":"{default-phone}","type":"Mobile Phone"},"contacts":[{"active":true,"details":"{default-phone}","type":"Mobile Phone"}],"employment_type":"In-House - Full-Time","employment_start_date":"{date: 0 seconds next, yyyy-MM-dd}","employment_end_date":"{date: 3 days next, yyyy-MM-dd}","hub_id":"{hub-id}","comments":"Generated by Common-MM","availability":true} |
    When API MM - Operator creates ad hoc trip
      | requestBody | {"origin_hub_id":"{KEY_LIST_OF_CREATED_HUBS[1].id}","origin_hub_system_id":"sg","destination_hub_id":"{KEY_LIST_OF_CREATED_HUBS[2].id}","destination_hub_system_id":"sg","departure_datetime":"{date: 0 seconds next, yyyy-MM-dd}T23:00:00Z","duration_time":"00:00:30","movement_type":"LAND_HAUL"} |
    When API MM - Operator assigns driver to movement trip with data below:
      | driver       | KEY_MM_LIST_OF_CREATED_MIDDLE_MILE_DRIVERS[1] |
      | priority     | primary                                       |
      | movementTrip | KEY_MM_LIST_OF_CREATED_MOVEMENT_TRIPS[1]      |
    When API MM - Operator creates multiple 1 new shipments with type "LAND_HAUL" from hub id "{KEY_LIST_OF_CREATED_HUBS[1].id}" to "{KEY_LIST_OF_CREATED_HUBS[2].id}"
    When API MM - Operator closes shipments "KEY_MM_LIST_OF_CREATED_SHIPMENTS"
    When API MM - Operator scan inbound single shipment to movement trip "KEY_MM_LIST_OF_CREATED_MOVEMENT_TRIPS[1]":
      | scanType    | SHIPMENT_VAN_INBOUND                    |
      | scanValue  | {KEY_MM_LIST_OF_CREATED_SHIPMENTS[1].id}  |
      | actionType  | ADD                                     |
    When API MM - Operator end shipment inbound with movement trip "KEY_MM_LIST_OF_CREATED_MOVEMENT_TRIPS[1]":
      | scanType | SHIPMENT_VAN_INBOUND |
      | driverId | {KEY_MM_LIST_OF_CREATED_MIDDLE_MILE_DRIVERS[1].id} |
    When API MM - Operator "depart" movement trip "KEY_MM_LIST_OF_CREATED_MOVEMENT_TRIPS[1]"
    And API MM - Operator gets shipment details with id "{KEY_MM_LIST_OF_CREATED_SHIPMENTS[1].id}"
    And API MM - Operator verifies events below for shipment "KEY_MM_LIST_OF_CREATED_SHIPMENTS[1]" exist:
      | SHIPMENT_VAN_INBOUND | Transit |
    When API MM - Operator "arrive" movement trip "KEY_MM_LIST_OF_CREATED_MOVEMENT_TRIPS[1]"
    When API MM - Operator scan inbound single shipment to movement trip "KEY_MM_LIST_OF_CREATED_MOVEMENT_TRIPS[1]":
      | scanType    | SHIPMENT_HUB_INBOUND                    |
      | scanValue  | {KEY_MM_LIST_OF_CREATED_SHIPMENTS[1].id}  |
      | actionType  | ADD                                     |
    When API MM - Operator "complete" movement trip "KEY_MM_LIST_OF_CREATED_MOVEMENT_TRIPS[1]"
    When API MM - Operator end shipment inbound with movement trip "KEY_MM_LIST_OF_CREATED_MOVEMENT_TRIPS[1]":
      | scanType | SHIPMENT_HUB_INBOUND |
      | driverId | {KEY_MM_LIST_OF_CREATED_MIDDLE_MILE_DRIVERS[1].id} |
    And Operator search shipments by given Ids on Shipment Management page:
      | {KEY_MM_LIST_OF_CREATED_SHIPMENTS[1].id} |
    Then Operator verify parameters of shipment on Shipment Management page:
      | id     | {KEY_MM_LIST_OF_CREATED_SHIPMENTS[1].id} |
      | status | Completed                 |
    When Operator edit Shipment on Shipment Management page:
      | shipmentId | {KEY_MM_LIST_OF_CREATED_SHIPMENTS[1].id} |
    Then  Operator verifies that error react notification displayed:
      | top    | Request failed with status code 400                            |
      | bottom | ^.*Error Message: unable to edit completed/cancelled shipments |

  @DeleteShipments
  Scenario: Bulk Update Shipment - Update Shipment Type (uid:b7647c11-855d-4d18-bb3c-3b03e6c7cc10)
    Given Operator go to menu Utilities -> QRCode Printing
    When Operator go to menu Inter-Hub -> Shipment Management
    And API Operator create new shipment with type "AIR_HAUL" from hub id = {hub-id} to hub id = {hub-id-2}
    And API Operator create new shipment with type "AIR_HAUL" from hub id = {hub-id} to hub id = {hub-id-2}
    And Operator search shipments by given Ids on Shipment Management page:
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[1]} |
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[2]} |
    And Operator selects all shipments and click bulk update button under the apply action
    When Operator bulk update shipment with data below:
      | shipmentType | Others |
    And Operator click Edit filter on Shipment Management page
    And Operator search shipments by given Ids on Shipment Management page:
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[1]} |
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[2]} |
    Then Operator verify the following parameters of all created shipments on Shipment Management page:
      | shipmentType | OTHERS |

  @DeleteShipments
  Scenario: Bulk Update Shipment - Update Origin Hub (uid:2cc47ea3-6553-4799-9a2d-c415ea57cba9)
    Given Operator go to menu Utilities -> QRCode Printing
    When Operator go to menu Inter-Hub -> Shipment Management
    And API Operator create new shipment with type "AIR_HAUL" from hub id = {hub-id} to hub id = {hub-id-2}
    And API Operator create new shipment with type "AIR_HAUL" from hub id = {hub-id} to hub id = {hub-id-2}
    And Operator search shipments by given Ids on Shipment Management page:
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[1]} |
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[2]} |
    And Operator selects all shipments and click bulk update button under the apply action
    When Operator bulk update shipment with data below:
      | startHub | {hub-name-3} |
    And Operator click Edit filter on Shipment Management page
    And Operator search shipments by given Ids on Shipment Management page:
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[1]} |
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[2]} |
    Then Operator verify the following parameters of all created shipments on Shipment Management page:
      | startHub | {hub-name-3} |

  @DeleteShipments
  Scenario: Bulk Update Shipment - Update Destination Hub (uid:f65d0f34-bb57-411f-903f-6f122af6292a)
    Given Operator go to menu Utilities -> QRCode Printing
    When Operator go to menu Inter-Hub -> Shipment Management
    And API Operator create new shipment with type "AIR_HAUL" from hub id = {hub-id} to hub id = {hub-id-2}
    And API Operator create new shipment with type "AIR_HAUL" from hub id = {hub-id} to hub id = {hub-id-2}
    And Operator search shipments by given Ids on Shipment Management page:
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[1]} |
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[2]} |
    And Operator selects all shipments and click bulk update button under the apply action
    When Operator bulk update shipment with data below:
      | endHub | {hub-name-3} |
    And Operator click Edit filter on Shipment Management page
    And Operator search shipments by given Ids on Shipment Management page:
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[1]} |
      | {KEY_LIST_OF_CREATED_SHIPMENT_ID[2]} |
    Then Operator verify the following parameters of all created shipments on Shipment Management page:
      | endHub | {hub-name-3} |

  @KillBrowser @ShouldAlwaysRun
  Scenario: Kill Browser
    Given no-op