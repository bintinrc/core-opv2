@OperatorV2 @MiddleMile @Hub @InterHub @MiddleMileDrivers @SearchDriver3
Feature: Middle Mile Driver Management - Search Driver 3

  @LaunchBrowser @ShouldAlwaysRun
  Scenario: Login to Operator Portal V2
    Given Operator login with username = "{operator-portal-uid}" and password = "{operator-portal-pwd}"

  @DeleteMiddleMileDriver
  Scenario: Search Driver on Search Field Employment Type (uid:29cddc59-7ceb-4ccf-a850-581a6ed69ad3)
    Given Operator go to menu Shipper Support -> Blocked Dates
    Given Operator go to menu Inter-Hub -> Middle Mile Drivers
    And Operator verifies middle mile driver management page is loaded
    When API MM - Operator creates new Middle Mile Driver with data below:
      | requestBody | {"username":"GENERATED","password":"{default-password}","first_name":"GENERATED","last_name":"GENERATED","license_number":"GENERATED","license_type":"Class 3A","driver_type":"Middle-Mile-Driver","license_expiry_date":"{date: 3 days next, yyyy-MM-dd}","contact":{"active":true,"details":"{default-phone}","type":"Mobile Phone"},"contacts":[{"active":true,"details":"{default-phone}","type":"Mobile Phone"}],"employment_type":"In-House - Full-Time","employment_start_date":"{date: 0 days next, yyyy-MM-dd}","employment_end_date":"{date: 3 days next, yyyy-MM-dd}","hub_id":"{hub-id}","comments":"Generated by Common-MM","availability":true} |
    Then Operator verifies UI elements in Middle Mile Driver Page with data below
      | url | https://operatorv2-qa.ninjavan.co/#/sg/middle-mile-drivers?hubIds={hub-id} |
      | Hub | {hub-name}                                                                 |
    Then Operator searches the "EMPLOYMENT TYPE" of "KEY_MM_LIST_OF_CREATED_MIDDLE_MILE_DRIVERS[1]" and verifies the value is correct

  @DeleteMiddleMileDriver
  Scenario: Search Driver on Search Field Employment Status (uid:edcf5cdb-1fd4-4b5f-9da4-2809758e28ca)
    Given Operator go to menu Inter-Hub -> Middle Mile Drivers
    And Operator verifies middle mile driver management page is loaded
    When API MM - Operator creates new Middle Mile Driver with data below:
      | requestBody | {"username":"GENERATED","password":"{default-password}","first_name":"GENERATED","last_name":"GENERATED","license_number":"GENERATED","license_type":"Class 3A","driver_type":"Middle-Mile-Driver","license_expiry_date":"{date: 3 days next, yyyy-MM-dd}","contact":{"active":true,"details":"{default-phone}","type":"Mobile Phone"},"contacts":[{"active":true,"details":"{default-phone}","type":"Mobile Phone"}],"employment_type":"In-House - Full-Time","employment_start_date":"{date: 0 days next, yyyy-MM-dd}","employment_end_date":"{date: 3 days next, yyyy-MM-dd}","hub_id":"{hub-id}","comments":"Generated by Common-MM","availability":true} |
    Then Operator verifies UI elements in Middle Mile Driver Page with data below
      | url | https://operatorv2-qa.ninjavan.co/#/sg/middle-mile-drivers?hubIds={hub-id} |
      | Hub | {hub-name}                                                                 |
    Then Operator searches the "EMPLOYMENT STATUS" of "KEY_MM_LIST_OF_CREATED_MIDDLE_MILE_DRIVERS[1]" and verifies the value is correct

  @DeleteMiddleMileDriver
  Scenario: Search Driver on Search Field License Type (uid:2d12f8e0-a6e2-4738-8c70-f9118823ee78)
    Given Operator go to menu Shipper Support -> Blocked Dates
    Given Operator go to menu Inter-Hub -> Middle Mile Drivers
    And Operator verifies middle mile driver management page is loaded
    When API MM - Operator creates new Middle Mile Driver with data below:
      | requestBody | {"username":"GENERATED","password":"{default-password}","first_name":"GENERATED","last_name":"GENERATED","license_number":"GENERATED","license_type":"Class 3A","driver_type":"Middle-Mile-Driver","license_expiry_date":"{date: 3 days next, yyyy-MM-dd}","contact":{"active":true,"details":"{default-phone}","type":"Mobile Phone"},"contacts":[{"active":true,"details":"{default-phone}","type":"Mobile Phone"}],"employment_type":"In-House - Full-Time","employment_start_date":"{date: 0 days next, yyyy-MM-dd}","employment_end_date":"{date: 3 days next, yyyy-MM-dd}","hub_id":"{hub-id}","comments":"Generated by Common-MM","availability":true} |
    Then Operator verifies UI elements in Middle Mile Driver Page with data below
      | url | https://operatorv2-qa.ninjavan.co/#/sg/middle-mile-drivers?hubIds={hub-id} |
      | Hub | {hub-name}                                                                 |
    Then Operator searches the "LICENSE TYPE" of "KEY_MM_LIST_OF_CREATED_MIDDLE_MILE_DRIVERS[1]" and verifies the value is correct

  @DeleteMiddleMileDriver
  Scenario: Search Driver on Search Field License Status (uid:3b4d5a2a-2838-46d0-a522-678ab24917e6)
    Given Operator go to menu Shipper Support -> Blocked Dates
    Given Operator go to menu Inter-Hub -> Middle Mile Drivers
    And Operator verifies middle mile driver management page is loaded
    When API MM - Operator creates new Middle Mile Driver with data below:
      | requestBody | {"username":"GENERATED","password":"{default-password}","first_name":"GENERATED","last_name":"GENERATED","license_number":"GENERATED","license_type":"Class 3A","driver_type":"Middle-Mile-Driver","license_expiry_date":"{date: 3 days next, yyyy-MM-dd}","contact":{"active":true,"details":"{default-phone}","type":"Mobile Phone"},"contacts":[{"active":true,"details":"{default-phone}","type":"Mobile Phone"}],"employment_type":"In-House - Full-Time","employment_start_date":"{date: 0 days next, yyyy-MM-dd}","employment_end_date":"{date: 3 days next, yyyy-MM-dd}","hub_id":"{hub-id}","comments":"Generated by Common-MM","availability":true} |
    Then Operator verifies UI elements in Middle Mile Driver Page with data below
      | url | https://operatorv2-qa.ninjavan.co/#/sg/middle-mile-drivers?hubIds={hub-id} |
      | Hub | {hub-name}                                                                 |
    Then Operator searches the "LICENSE STATUS" of "KEY_MM_LIST_OF_CREATED_MIDDLE_MILE_DRIVERS[1]" and verifies the value is correct

  @DeleteMiddleMileDriver
  Scenario: Search Driver on Search Field Comment (uid:813a82e7-0ce2-4206-b269-646dc2cc76bd)
    Given Operator go to menu Shipper Support -> Blocked Dates
    Given Operator go to menu Inter-Hub -> Middle Mile Drivers
    And Operator verifies middle mile driver management page is loaded
    When API MM - Operator creates new Middle Mile Driver with data below:
      | requestBody | {"username":"GENERATED","password":"{default-password}","first_name":"GENERATED","last_name":"GENERATED","license_number":"GENERATED","license_type":"Class 3A","driver_type":"Middle-Mile-Driver","license_expiry_date":"{date: 3 days next, yyyy-MM-dd}","contact":{"active":true,"details":"{default-phone}","type":"Mobile Phone"},"contacts":[{"active":true,"details":"{default-phone}","type":"Mobile Phone"}],"employment_type":"In-House - Full-Time","employment_start_date":"{date: 0 days next, yyyy-MM-dd}","employment_end_date":"{date: 3 days next, yyyy-MM-dd}","hub_id":"{hub-id}","comments":"Generated by Common-MM","availability":true} |
    Then Operator verifies UI elements in Middle Mile Driver Page with data below
      | url | https://operatorv2-qa.ninjavan.co/#/sg/middle-mile-drivers?hubIds={hub-id} |
      | Hub | {hub-name}                                                                 |
    Then Operator searches the "COMMENTS" of "KEY_MM_LIST_OF_CREATED_MIDDLE_MILE_DRIVERS[1]" and verifies the value is correct

  Scenario Outline: Sort Driver on Name column - <dataset_name> (<hiptest-uid>)
    Given Operator go to menu Shipper Support -> Blocked Dates
    Given Operator go to menu Inter-Hub -> Middle Mile Drivers
    And Operator verifies middle mile driver management page is loaded
    Then Operator verifies UI elements in Middle Mile Driver Page with data below
      | url | https://operatorv2-qa.ninjavan.co/#/sg/middle-mile-drivers?employmentStatus=active&hubIds={hub-id}&licenseStatus=active |
      | Hub | {hub-name}                                                                 |
      | Employment Status | Active                                                                                                  |
      | License Status    | Active                                                                                                  |
    When Operator click "<sort>" in "Username" column on Middle Mile Driver Page
    Then Make sure All data in Middle Mile Driver tables is "<result>" shown based on "Username"

    Examples:
      | sort       | result     | hiptest-uid                              | dataset_name    |
      | Ascending  | Ascending  | uid:2c68bebf-d4b1-400f-8b9c-a8a40c98fd68 | Sort Ascending  |
      | Descending | Descending | uid:2c68bebf-d4b1-400f-8b9c-a8a40c98fd68 | Sort Descending |

  Scenario Outline: Sort Driver on ID column - <dataset_name> (<hiptest-uid>)
    Given Operator go to menu Shipper Support -> Blocked Dates
    Given Operator go to menu Inter-Hub -> Middle Mile Drivers
    And Operator verifies middle mile driver management page is loaded
    Then Operator verifies UI elements in Middle Mile Driver Page with data below
      | url | https://operatorv2-qa.ninjavan.co/#/sg/middle-mile-drivers?employmentStatus=active&hubIds={hub-id}&licenseStatus=active |
      | Hub | {hub-name}                                                                 |
      | Employment Status | Active                                                                                                  |
      | License Status    | Active                                                                                                  |
    When Operator click "<sort>" in "ID" column on Middle Mile Driver Page
    Then Make sure All data in Middle Mile Driver tables is "<result>" shown based on "ID"

    Examples:
      | sort       | result     | hiptest-uid                              | dataset_name    |
      | Ascending  | Ascending  | uid:2c68bebf-d4b1-400f-8b9c-a8a40c98fd68 | Sort Ascending  |
      | Descending | Descending | uid:2c68bebf-d4b1-400f-8b9c-a8a40c98fd68 | Sort Descending |

  @KillBrowser @ShouldAlwaysRun
  Scenario: Kill Browser
    Given no-op